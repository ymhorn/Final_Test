services:
  mongo:
    image: mongodb/mongodb-community-server:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - project

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elastic
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    ports:
      - "9200:9200"
    networks:
      - project

  broker:
    image: apache/kafka:latest
    container_name: broker
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: broker,controller
#      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
    networks:
      - project

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    environment:
      KIBANA_ELASTICSEARCH_HOSTS: http://localhost:9200
    ports:
      - "5601:5601"
    networks:
      - project
    depends_on:
      - elasticsearch

networks:
  project:
    driver: bridge






#volumes:
#  db-data:
#    driver: flocker
#    driver_opts:
#      size: "10GiB"
#
#configs:
#  httpd-config:
#    external: true
#
#secrets:
#  server-certificate:
#    external: true
#
#networks:
#  # The presence of these objects is sufficient to define them
#  front-tier: {}
#  back-tier: {}