services:
  mongo:
    image: mongodb/mongodb-community-server:latest
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      - project

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elastic
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      ES_JAVA_OPTS: -Xms1g -Xmx1g
    ports:
      - "9200:9200"
    networks:
      - project

  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
    networks:
      - project

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    container_name: kibana
    environment:
      KIBANA_ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - project
    depends_on:
      elasticsearch:
        condition: service_started

  stage_1:
    build:
      context: .
      dockerfile: ./stage_1/Dockerfile
    environment:
      PARENT_PATH: /app/audio
      TOPIC: meta_data
    networks:
      - project
    volumes:
      - audio_files:/app/audio
    depends_on:
      stage_2:
        condition: service_started


  stage_2:
    build:
      context: .
      dockerfile: ./stage_2/Dockerfile
    environment:
      TOPIC: meta_data
      MONGO_DB: audio
      MONGO_COL: final_test
      ES_INDEX: meta_data
    networks:
      - project
    volumes:
      - audio_files:/app/audio
    depends_on:
      broker:
        condition: service_started
      mongo:
        condition: service_started
      elasticsearch:
        condition: service_started



  stage_3:
    build:
      context: .
      dockerfile: ./stage_3/Dockerfile
    environment:
      ES_INDEX: meta_data
    networks:
      - project
    volumes:
      - audio_files:/app/audio
    depends_on:
      stage_2:
        condition: service_completed_successfully

  stage_4:
    build:
      context: .
      dockerfile: ./stage_4/Dockerfile
    environment:
      HOSTILE_LIST: R2Vub2NpZGUsV2FyIENyaW1lcyxBcGFydGhlaWQsTWFzc2FjcmUsTmFrYmEsRGlzcGxhY2VtZW50LEh1bWFuaXRhcmlhbiBDcmlzaXMsQmxvY2thZGUsT2NjdXBhdGlvbixSZWZ1Z2VlcyxJQ0MsQkRT
      SEMI_HOSTILE_LIST: RnJlZWRvbSBGbG90aWxsYSxSZXNpc3RhbmNlLExpYmVyYXRpb24sRnJlZSBQYWxlc3RpbmUsR2F6YSxDZWFzZWZpcmUsUHJvdGVzdCxVTlJXQQ==
      DIVIDE_TEXT_BY: 33
      CRIMINAL_THRESHOLD: 50
      LOW_THRESHOLD: 33
      HIGH_THRESHOLD: 66
      ES_INDEX: meta_data
    networks:
      - project
    volumes:
      - audio_files:/app/audio
    depends_on:
      stage_3:
        condition: service_completed_successfully


networks:
  project:
    driver: bridge

volumes:
  audio_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: C:\Users\Yisroel Meir\Desktop\podcasts

